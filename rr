#include <stdio.h>
#include <string.h>

#define MAX_BOOKS 50
#define MAX_TITLE_LENGTH 50

// Function prototypes
int findBook(char title[MAX_BOOKS][MAX_TITLE_LENGTH], char targetTitle[MAX_TITLE_LENGTH]);
void addBook(char title[MAX_BOOKS][MAX_TITLE_LENGTH], int* numBooks);
void removeBook(char title[MAX_BOOKS][MAX_TITLE_LENGTH], int* numBooks);
void displayBooks(char title[MAX_BOOKS][MAX_TITLE_LENGTH], int numBooks);
int isLibraryFull(int numBooks);

int main() {
    char title[MAX_BOOKS][MAX_TITLE_LENGTH]; // Array to store book titles
    int numBooks = 0; // Number of books

    int choice;

    while (1) {
        printf("\nLIBRARY MANAGEMENT SYSTEM\n");
        printf("1. Add Book\n");
        printf("2. Remove Book\n");
        printf("3. Display Books\n");
        printf("4. Exit\n");
        printf("Enter your choice (1-4): ");
        scanf("%d", &choice);

        // Clearing input buffer
        while(getchar() != '\n');

        switch (choice) {
            case 1:
                addBook(title, &numBooks);
                break;
            case 2:
                removeBook(title, &numBooks);
                break;
            case 3:
                displayBooks(title, numBooks);
                break;
            case 4:
                printf("Exiting...\n");
                return 0;
            default:
                printf("Invalid choice! Please enter a number between 1 and 4.\n");
        }
    }

    return 0;
}

// Function to find a book by title (uses string comparison)
int findBook(char title[MAX_BOOKS][MAX_TITLE_LENGTH], char targetTitle[MAX_TITLE_LENGTH]) {
    for (int i = 0; i < MAX_BOOKS; i++) {
        if (strcmp(title[i], targetTitle) == 0) {
            return i; // Book found, return index
        }
    }
    return -1; // Book not found
}

// Function to add a book
void addBook(char title[MAX_BOOKS][MAX_TITLE_LENGTH], int* numBooks) {
    if (isLibraryFull(*numBooks)) {
        printf("Sorry, the library is full! Cannot add more books.\n");
        return;
    }

    printf("Enter the title of the book: ");
    gets(title[*numBooks]); // Read input, unsafe!

    (*numBooks)++;
    printf("Book added successfully!\n");
}

// Function to remove a book
void removeBook(char title[MAX_BOOKS][MAX_TITLE_LENGTH], int* numBooks) {
    if (*numBooks == 0) {
        printf("The library is empty! No books to remove.\n");
        return;
    }

    char targetTitle[MAX_TITLE_LENGTH];
    printf("Enter the title of the book to remove: ");
    gets(targetTitle); // Read input, unsafe!

    int index = findBook(title, targetTitle);
    if (index == -1) {
        printf("Book not found in the library!\n");
        return;
    }

    // Shift remaining elements to remove the deleted book
    for (int i = index; i < *numBooks; i++) {
        strcpy(title[i], title[i + 1]);
    }

    (*numBooks)--;
    printf("Book removed successfully!\n");
}

// Function to display all books in the library
void displayBooks(char title[MAX_BOOKS][MAX_TITLE_LENGTH], int numBooks) {
    if (numBooks == 0) {
        printf("The library is empty! No books to display.\n");
        return;
    }

    printf("\nList of Books:\n");
    for (int i = 0; i < numBooks; i++) {
        printf("%d. %s\n", i + 1, title[i]);
    }
}

// Function to check if the library is full
int isLibraryFull(int numBooks) {
    return numBooks == MAX_BOOKS;
}
