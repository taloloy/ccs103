#include <stdio.h>
#include <string.h>

// Function prototypes
int findBook(char title[50][50], char author[50][30], char enteredTitle[50]);
void addBook(char title[50][50], char author[50][30], int* numBooks);
void removeBook(char title[50][50], char author[50][30], int* numBooks);
void displayBooks(char title[50][50], char author[50][30], int numBooks);
int isLibraryFull(int numBooks);
void firstLetter(char title[50][50], char author[50][30], int numBooks, char letter);
void shortestTitle(char title[50][50], int numBooks);
void longestTitle(char title[50][50], int numBooks);

int main() {

    char title[50][50]; // Array to store book titles
    char author[50][30]; // Array to store book authors
    int numBooks = 0; // Number of books

    int choice;

    // menu
    while (1) {
        printf("\n\tGIZMO'S LIBRARY\n");
        printf("1. Add Book\n");
        printf("2. Remove Book\n");
        printf("3. Display Books\n");
        printf("4. Find Books by First Letter\n");
        printf("5. Find Shortest Title\n");
        printf("6. Find Longest Title\n");
        printf("7. Exit\n");
        printf("Enter your choice (1-7): ");
        scanf("%d", &choice);

        while(getchar() != '\n');

        switch (choice) {
            case 1:
                addBook(title, author, &numBooks);
                break;
            case 2:
                removeBook(title, author, &numBooks);
                break;
            case 3:
                displayBooks(title, author, numBooks);
                break;
            case 4:
                {
                    char letter;
                    printf("Enter the first letter of the titles you want to find: ");
                    scanf(" %c", &letter);
                    firstLetter(title, author, numBooks, letter);
                }
                break;
            case 5:
                shortestTitle(title, numBooks);
                break;
            case 6:
                longestTitle(title, numBooks);
                break;
            case 7:
                printf("Exiting...\n");
                return 0;
            default:
                printf("Invalid choice! Please enter a number between 1 and 7.\n");
        }
    }

    return 0;
}

// Function to find a book by title (uses string comparison)
int findBook(char title[50][50], char author[50][30], char enteredTitle[50]) {
    for (int i = 0; i < 50; i++) {
        if (strcmp(title[i], enteredTitle) == 0) {
            return i; //if Book found
        }
    }
    return -1; //if Book not found
}

// Function to add a book
void addBook(char title[50][50], char author[50][30], int* numBooks) {
    if (isLibraryFull(*numBooks)) {
        printf("Sorry, the library is full! Cannot add more books.\n");
        return;
    }

    printf("Enter the title of the book: ");
    gets(title[*numBooks]);

    printf("Enter the author of the book: ");
    gets(author[*numBooks]); 

    (*numBooks += 1);
    printf("Book added successfully!\n");
}

// Function to remove a book
void removeBook(char title[50][50], char author[50][30], int* numBooks) {
    if (*numBooks == 0) {
        printf("The library is empty! No books to remove.\n");
        return;
    }

    char enteredTitle[50];
    printf("Enter the title of the book to remove: ");
    gets(enteredTitle);

    int book = findBook(title, author, enteredTitle);
    if (book == -1) {
        printf("Book not found in the library!\n");
        return;
    }

    for (int i = book; i < *numBooks; i++) {
        strcpy(title[i], title[i + 1]);
        strcpy(author[i], author[i + 1]);
    }

    (*numBooks -= 1);
    printf("Book removed successfully!\n");
}

// Function to display all books in the library
void displayBooks(char title[50][50], char author[50][30], int numBooks) {
    if (numBooks == 0) {
        printf("The library is empty! No books to display.\n");
        return;
    }

    printf("\nList of Books:\n");
    for (int i = 0; i < numBooks; i++) {
        printf("%d. %s - %s\n", i + 1, title[i], author[i]);
    }
}

// Function to check if the library is full
int isLibraryFull(int numBooks) {
    return numBooks == 50;
}

// Function to find books by the first letter of their titles
void firstLetter(char title[50][50], char author[50][30
], int numBooks, char letter) {
    int found = 0;
    printf("Books with titles starting with '%c':\n", letter);
    for (int i = 0; i < numBooks; i++) {
        if (title[i][0] == letter) {
            printf("%d. %s - %s\n", i + 1, title[i], author[i]);
            found = 1;
        }
    }
    if (!found) {
        printf("No books found with titles starting with '%c'.\n", letter);
    }
}

// Function to find the shortest title among all the books
void shortestTitle(char title[50][50], int numBooks) {
    int shortT = 0;
    int minLength = 50;
    for (int i = 0; i < numBooks; i++) {
        int length = strlen(title[i]);
        if (length < minLength) {
            minLength = length;
            shortT = i;
        }
    }
    printf("Shortest title: %s\n", title[shortT]);
}


// Function to find the longest title among all the books
void longestTitle(char title[50][50], int numBooks) {
    int longT = 0;
    int maxLength = 0;
    for (int i = 0; i < numBooks; i++) {
        int length = strlen(title[i]);
        if (length > maxLength) {
            maxLength = length;
            longT = i;
        }
    }
    printf("Longest title: %s\n", title[longT]);
}
