#include <stdio.h>
#include <string.h>


// Function prototypes (excluding main)
int MAX_BOOKS = 50;
int findBook(char title[MAX_BOOKS][50], char targetTitle[50]);
void addBook(char title[MAX_BOOKS][50], int* numBooks);
void removeBook(char title[MAX_BOOKS][50], int* numBooks);
void displayBooks(char title[MAX_BOOKS][50], int numBooks);

int main() {
    char title[MAX_BOOKS][50]; // Two-dimensional array to store book titles
    int numBooks = 0; // Keeps track of the number of books

    int choice;

    while (1) {
        printf("\nLIBRARY MANAGEMENT SYSTEM\n");
        printf("1. Add Book\n");
        printf("2. Remove Book\n");
        printf("3. Display Books\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        // Clearing input buffer
        while(getchar() != '\n');

        switch (choice) {
            case 1:
                addBook(title, &numBooks);
                break;
            case 2:
                removeBook(title, &numBooks);
                break;
            case 3:
                displayBooks(title, numBooks);
                break;
            case 4:
                printf("Exiting...\n");
                return 0;
            default:
                printf("Invalid choice!\n");
        }
    }

    return 0;
}

// Function to find a book by title (uses string comparison)
int findBook(char title[MAX_BOOKS][50], char targetTitle[50]) {
    for (int i = 0; i < MAX_BOOKS; i++) {
        if (strcmp(title[i], targetTitle) == 0) {
            return i; // Book found, return index
        }
    }
    return -1; // Book not found
}

// Function to add a book (uses string functions for input)
void addBook(char title[MAX_BOOKS][50], int* numBooks) {
    if (*numBooks == MAX_BOOKS) {
        printf("Library is full!\n");
        return;
    }

    printf("Enter book title: ");
    scanf(" %s", title[*numBooks]); // Read until newline, avoiding buffer issues

    (*numBooks)++;
    printf("Book added successfully!\n");
}

// Function to remove a book (uses string functions for comparison)
void removeBook(char title[MAX_BOOKS][50], int* numBooks) {
    if (*numBooks == 0) {
    	
        printf("Library is empty!\n");
        return;
    }

    char targetTitle[50];
    printf("Enter title of book to remove: ");
    scanf("%s", targetTitle); // Read until newline, avoiding buffer issues

    int index = findBook(title, targetTitle);
    if (index == -1) {
        printf("Book not found!\n");
        return;
    }

    // Shift remaining elements to remove the deleted book
    for (int i = index; i < *numBooks; i++) {
        strcpy(title[i], title[i + 1]);
    }

    (*numBooks)--;
    printf("Book removed successfully!\n");
}

// Function to display all books in the library
void displayBooks(char title[MAX_BOOKS][50], int numBooks) {
    if (numBooks == 0) {
        printf("Library is empty!\n");
        return;
    }

    printf("\nList of Books:\n");
    for (int i = 0; i < numBooks; i++) {
        printf("%d. %s\n", i + 1, title[i]);
    }
}
